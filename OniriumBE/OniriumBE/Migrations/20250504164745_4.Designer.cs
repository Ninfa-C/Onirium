// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OniriumBE.Data;

#nullable disable

namespace OniriumBE.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250504164745_4")]
    partial class _4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CustomersManager.Models.Auth.ApplicationRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "1",
                            ConcurrencyStamp = "1",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "2",
                            ConcurrencyStamp = "2",
                            Name = "Moderator",
                            NormalizedName = "MODERATOR"
                        },
                        new
                        {
                            Id = "3",
                            ConcurrencyStamp = "3",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("CustomersManager.Models.Auth.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ProfilePictureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("CustomersManager.Models.Auth.ApplicationUserRole", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("OniriumBE.Models.AttackSpells.Damage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DamageDice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Damages");
                });

            modelBuilder.Entity("OniriumBE.Models.AttackSpells.Spell", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ComponentsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CostId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAd")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DurationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExtraDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsConcentration")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCustom")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRitual")
                        .HasColumnType("bit");

                    b.Property<Guid>("LevelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Range")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("SavingThrowId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SchoolId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ComponentsId");

                    b.HasIndex("CostId");

                    b.HasIndex("DurationId");

                    b.HasIndex("LevelId");

                    b.HasIndex("SavingThrowId");

                    b.HasIndex("SchoolId");

                    b.HasIndex("UserId");

                    b.ToTable("Spells");
                });

            modelBuilder.Entity("OniriumBE.Models.AttackSpells.SpellComponent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("SpellComponents");
                });

            modelBuilder.Entity("OniriumBE.Models.AttackSpells.SpellCost", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cost")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("SpellCosts");
                });

            modelBuilder.Entity("OniriumBE.Models.AttackSpells.SpellDuration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAd")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCustom")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("SpellDurations");
                });

            modelBuilder.Entity("OniriumBE.Models.AttackSpells.SpellLevel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SpellLevels");
                });

            modelBuilder.Entity("OniriumBE.Models.AttackSpells.SpellSchool", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAd")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCustom")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("SpellSchools");
                });

            modelBuilder.Entity("OniriumBE.Models.AttackSpells.SpellSpellDamage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SpellDamageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SpellId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SpellDamageId");

                    b.HasIndex("SpellId");

                    b.ToTable("SpellSpellDamages");
                });

            modelBuilder.Entity("OniriumBE.Models.Campaign.Campaign", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GameMasterId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Img")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GameMasterId");

                    b.ToTable("Campaigns");
                });

            modelBuilder.Entity("OniriumBE.Models.Campaign.CampaignChar.CampaignCharItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CampaignCharacterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsEquiped")
                        .HasColumnType("bit");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CampaignCharacterId");

                    b.HasIndex("ItemId");

                    b.ToTable("CampaignCharItems");
                });

            modelBuilder.Entity("OniriumBE.Models.Campaign.CampaignChar.CampaignCharSpells", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CampaignCharacterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsPrepared")
                        .HasColumnType("bit");

                    b.Property<Guid>("SpellId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CampaignCharacterId");

                    b.HasIndex("SpellId");

                    b.ToTable("CampaignCharSpells");
                });

            modelBuilder.Entity("OniriumBE.Models.Campaign.CampaignChar.CampaignCharTrait", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CampaignCharacterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CampaignCharacterId");

                    b.ToTable("CampaignCharTraits");
                });

            modelBuilder.Entity("OniriumBE.Models.Campaign.CampaignChar.CampaignCharacter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BackgroundName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CurrentLifePoints")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProficiencyBonus")
                        .HasColumnType("int");

                    b.Property<string>("RaceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubraceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TemporaryLifePoints")
                        .HasColumnType("int");

                    b.Property<int>("TotalLifePoints")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CampaignCharacters");
                });

            modelBuilder.Entity("OniriumBE.Models.Campaign.CampaignChar.CampaignCharacterSkills", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CampaignCharacterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsProficient")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CampaignCharacterId");

                    b.ToTable("CampaignCharacterSkills");
                });

            modelBuilder.Entity("OniriumBE.Models.Campaign.CampaignChar.CampaignCharacterStat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CampaignCharacterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CampaignCharacterId");

                    b.ToTable("CampaignCharacterStats");
                });

            modelBuilder.Entity("OniriumBE.Models.Campaign.CampaignChar.CharacterClass", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CampaignCharacterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LevelInClass")
                        .HasColumnType("int");

                    b.Property<string>("SubClassName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CampaignCharacterId");

                    b.ToTable("CharacterClasses");
                });

            modelBuilder.Entity("OniriumBE.Models.Campaign.CampaignInviteToken", b =>
                {
                    b.Property<Guid>("Token")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CampaignId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Token");

                    b.ToTable("CampaignInviteTokens");
                });

            modelBuilder.Entity("OniriumBE.Models.Campaign.CampaignNote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CampaignId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("bit");

                    b.Property<bool>("MasterOnly")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.ToTable("CampaignNotes");
                });

            modelBuilder.Entity("OniriumBE.Models.Campaign.CharacterPlayerAssignment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CharacterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsAlive")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlayerCampaignId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("PlayerCampaignId");

                    b.ToTable("CharacterPlayerAssignments");
                });

            modelBuilder.Entity("OniriumBE.Models.Campaign.Location", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CampaignId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("bit");

                    b.Property<string>("MasterNotes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Visited")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("OniriumBE.Models.Campaign.Npc", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CampaignId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CharId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("bit");

                    b.Property<string>("MasterNotes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Meet")
                        .HasColumnType("bit");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.HasIndex("CharId");

                    b.ToTable("Npcs");
                });

            modelBuilder.Entity("OniriumBE.Models.Campaign.Players", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("CampaignId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.HasIndex("UserId");

                    b.ToTable("PlayerCampaign");
                });

            modelBuilder.Entity("OniriumBE.Models.Campaign.Quest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CampaignId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("bit");

                    b.Property<string>("MasterNotes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reward")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.ToTable("Quests");
                });

            modelBuilder.Entity("OniriumBE.Models.Campaign.Session", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CampaignId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Completed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("bit");

                    b.Property<string>("MasterNotes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NextSessionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.Backgrounds.Background", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCustom")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Backgrounds");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.Backgrounds.BackgroundPrivilege", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAd")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCustom")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("BackgroundPrivilege");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.Backgrounds.BackgroundPrivilegeAssignment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BackgroundId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TraitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BackgroundId");

                    b.HasIndex("TraitId");

                    b.ToTable("BackgroundPrivilegeAssignment");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.Backgrounds.BackgroundSkill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BackgroundId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SkillId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BackgroundId");

                    b.HasIndex("SkillId");

                    b.ToTable("BackgroundSkills");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.Character", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BackgroundId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LifePoints")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("RaceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SubraceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("BackgroundId");

                    b.HasIndex("RaceId");

                    b.HasIndex("SubraceId");

                    b.HasIndex("UserId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.CharacterInventory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CharacterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MaxWeight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.ToTable("CharacterInventories");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.CharacterSkill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CharacterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsProficient")
                        .HasColumnType("bit");

                    b.Property<Guid>("SkillId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("SkillId");

                    b.ToTable("CharacterSkills");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.CharacterSpell", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CharacterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsPrepared")
                        .HasColumnType("bit");

                    b.Property<Guid>("SpellId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SpellLevel")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("SpellId");

                    b.ToTable("CharacterSpells");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.CharacterStats", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CharacterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StatId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("StatId");

                    b.ToTable("CharacterStats");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.CharacterTrait", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CharacterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Source")
                        .HasColumnType("int");

                    b.Property<Guid>("TraitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.ToTable("CharacterTraits");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.Classes.Class", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageSemplifier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCustom")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RequiredLevelForSubclass")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.Classes.ClassAssignment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CharacterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("LevelInClass")
                        .HasColumnType("int");

                    b.Property<Guid?>("SubclassId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("ClassId");

                    b.HasIndex("SubclassId");

                    b.ToTable("ClassAssignments");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.Classes.ClassFeatures", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAd")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCustom")
                        .HasColumnType("bit");

                    b.Property<int>("LevelRequired")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ClassFeatures");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.Classes.ClassFeaturesAssignmente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ClassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SubclassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TraitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("SubclassId");

                    b.HasIndex("TraitId");

                    b.ToTable("ClassFeaturesAssignments");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.Classes.ClassProficiency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("ClassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ProficiencyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("ProficiencyId");

                    b.ToTable("ClassProficiencies");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.Classes.ClassSpell", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RequiredClassLevel")
                        .HasColumnType("int");

                    b.Property<Guid>("SpellId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("SpellId");

                    b.ToTable("ClassSpells");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.Classes.Proficiency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Proficiencies");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.Classes.Subclass", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAd")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCustom")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("UserId");

                    b.ToTable("Subclasses");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.Races.Race", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCustom")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Races");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.Races.RaceTraitAssignment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RaceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SubraceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TraitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RaceId");

                    b.HasIndex("SubraceId");

                    b.HasIndex("TraitId");

                    b.ToTable("RaceTraitAssignment");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.Races.RacialTraits", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAd")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCustom")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RacialTraits");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.Races.StartingBoost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid?>("CharId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StatId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CharId");

                    b.HasIndex("StatId");

                    b.ToTable("StartingBoosts");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.Races.Subrace", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAd")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCustom")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("RaceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RaceId");

                    b.HasIndex("UserId");

                    b.ToTable("Subraces");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.Skill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAd")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCustom")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StatId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("StatId");

                    b.HasIndex("UserId");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.Stats", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAd")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCustom")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Stats");
                });

            modelBuilder.Entity("OniriumBE.Models.Items.InventoryItemAssignment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InventoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InventoryItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsEquiped")
                        .HasColumnType("bit");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InventoryId");

                    b.HasIndex("InventoryItemId");

                    b.ToTable("InventoryItemAssignments");
                });

            modelBuilder.Entity("OniriumBE.Models.Items.ItemCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ItemCategories");
                });

            modelBuilder.Entity("OniriumBE.Models.Items.ItemDamage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DamageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WeaponId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DamageId");

                    b.HasIndex("WeaponId");

                    b.ToTable("ItemDamages");
                });

            modelBuilder.Entity("OniriumBE.Models.Items.ItemEffect", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AffectedStat")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EffectType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCustom")
                        .HasColumnType("bit");

                    b.Property<Guid?>("MagicalItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PotionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AffectedStat");

                    b.HasIndex("MagicalItemId");

                    b.HasIndex("PotionId");

                    b.ToTable("ItemEffects");
                });

            modelBuilder.Entity("OniriumBE.Models.Items.ItemRequirement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArmorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MinimumValue")
                        .HasColumnType("int");

                    b.Property<Guid>("StatId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ArmorId");

                    b.HasIndex("StatId");

                    b.ToTable("ItemRequirements");
                });

            modelBuilder.Entity("OniriumBE.Models.Items.Items", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCustom")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMagical")
                        .HasColumnType("bit");

                    b.Property<int>("ItemCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemCategoryId1")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ItemCategoryId");

                    b.HasIndex("ItemCategoryId1");

                    b.HasIndex("UserId");

                    b.ToTable("Items");

                    b.HasDiscriminator<string>("Category").HasValue("Items");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("OniriumBE.Models.MODs.Mod", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DownloadCount")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Mods");
                });

            modelBuilder.Entity("OniriumBE.Models.MODs.ModContent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ContentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ModId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ModId");

                    b.ToTable("ModContents");
                });

            modelBuilder.Entity("OniriumBE.Models.MODs.ModRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ModId");

                    b.HasIndex("UserId");

                    b.ToTable("ModRatings");
                });

            modelBuilder.Entity("OniriumBE.Models.MODs.ModReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsResolved")
                        .HasColumnType("bit");

                    b.Property<Guid>("ModId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReportDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResolutionNotes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResolvedBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ModId");

                    b.HasIndex("ResolvedBy");

                    b.HasIndex("UserId");

                    b.ToTable("ModReports");
                });

            modelBuilder.Entity("OniriumBE.Models.Shop.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("OniriumBE.Models.Shop.Color", b =>
                {
                    b.Property<int>("IdColor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdColor"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdColor");

                    b.ToTable("Color");
                });

            modelBuilder.Entity("OniriumBE.Models.Shop.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderID"));

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("OrderID");

                    b.HasIndex("UserID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("OniriumBE.Models.Shop.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderDetailID"));

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<Guid>("ProductID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderDetailID");

                    b.HasIndex("OrderID");

                    b.HasIndex("ProductID");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("OniriumBE.Models.Shop.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CratedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(8,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("OniriumBE.Models.Shop.Review", b =>
                {
                    b.Property<int>("ReviewID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewID"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ReviewID");

                    b.HasIndex("ProductID");

                    b.HasIndex("UserID");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("OniriumBE.Models.Shop.Size", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Size");
                });

            modelBuilder.Entity("OniriumBE.Models.Shop.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("SizeId")
                        .HasColumnType("int");

                    b.Property<int>("VariantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SizeId");

                    b.HasIndex("VariantId");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("OniriumBE.Models.Shop.Variant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductVariant");
                });

            modelBuilder.Entity("OniriumBE.Models.Items.Armor", b =>
                {
                    b.HasBaseType("OniriumBE.Models.Items.Items");

                    b.Property<int>("ArmorClass")
                        .HasColumnType("int");

                    b.Property<string>("ArmorType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasDisadvantageOnStealth")
                        .HasColumnType("bit");

                    b.HasDiscriminator().HasValue("Armatura");
                });

            modelBuilder.Entity("OniriumBE.Models.Items.MagicalItem", b =>
                {
                    b.HasBaseType("OniriumBE.Models.Items.Items");

                    b.Property<int?>("Charges")
                        .HasColumnType("int");

                    b.Property<string>("Rarity")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("RequiresAttunement")
                        .HasColumnType("bit");

                    b.HasDiscriminator().HasValue("OggettoMagico");
                });

            modelBuilder.Entity("OniriumBE.Models.Items.Potion", b =>
                {
                    b.HasBaseType("OniriumBE.Models.Items.Items");

                    b.HasDiscriminator().HasValue("Pozione");
                });

            modelBuilder.Entity("OniriumBE.Models.Items.Weapon", b =>
                {
                    b.HasBaseType("OniriumBE.Models.Items.Items");

                    b.HasDiscriminator().HasValue("Arma");
                });

            modelBuilder.Entity("CustomersManager.Models.Auth.ApplicationUserRole", b =>
                {
                    b.HasOne("CustomersManager.Models.Auth.ApplicationRole", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CustomersManager.Models.Auth.ApplicationUser", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("CustomersManager.Models.Auth.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("CustomersManager.Models.Auth.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("CustomersManager.Models.Auth.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("CustomersManager.Models.Auth.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OniriumBE.Models.AttackSpells.Spell", b =>
                {
                    b.HasOne("OniriumBE.Models.AttackSpells.SpellComponent", "Components")
                        .WithMany()
                        .HasForeignKey("ComponentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OniriumBE.Models.AttackSpells.SpellCost", "Cost")
                        .WithMany()
                        .HasForeignKey("CostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OniriumBE.Models.AttackSpells.SpellDuration", "Duration")
                        .WithMany()
                        .HasForeignKey("DurationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OniriumBE.Models.AttackSpells.SpellLevel", "Level")
                        .WithMany()
                        .HasForeignKey("LevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OniriumBE.Models.Char.Stats", "SavingThrow")
                        .WithMany()
                        .HasForeignKey("SavingThrowId");

                    b.HasOne("OniriumBE.Models.AttackSpells.SpellSchool", "School")
                        .WithMany()
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CustomersManager.Models.Auth.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Components");

                    b.Navigation("Cost");

                    b.Navigation("Duration");

                    b.Navigation("Level");

                    b.Navigation("SavingThrow");

                    b.Navigation("School");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OniriumBE.Models.AttackSpells.SpellDuration", b =>
                {
                    b.HasOne("CustomersManager.Models.Auth.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OniriumBE.Models.AttackSpells.SpellSchool", b =>
                {
                    b.HasOne("CustomersManager.Models.Auth.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OniriumBE.Models.AttackSpells.SpellSpellDamage", b =>
                {
                    b.HasOne("OniriumBE.Models.AttackSpells.Damage", "SpellDamage")
                        .WithMany("SpellSpellDamages")
                        .HasForeignKey("SpellDamageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OniriumBE.Models.AttackSpells.Spell", "Spell")
                        .WithMany("SpellSpellDamages")
                        .HasForeignKey("SpellId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Spell");

                    b.Navigation("SpellDamage");
                });

            modelBuilder.Entity("OniriumBE.Models.Campaign.Campaign", b =>
                {
                    b.HasOne("CustomersManager.Models.Auth.ApplicationUser", "Master")
                        .WithMany()
                        .HasForeignKey("GameMasterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Master");
                });

            modelBuilder.Entity("OniriumBE.Models.Campaign.CampaignChar.CampaignCharItem", b =>
                {
                    b.HasOne("OniriumBE.Models.Campaign.CampaignChar.CampaignCharacter", "CampaignCharacter")
                        .WithMany("Inventory")
                        .HasForeignKey("CampaignCharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OniriumBE.Models.Items.Items", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CampaignCharacter");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("OniriumBE.Models.Campaign.CampaignChar.CampaignCharSpells", b =>
                {
                    b.HasOne("OniriumBE.Models.Campaign.CampaignChar.CampaignCharacter", "CampaignCharacter")
                        .WithMany("Spells")
                        .HasForeignKey("CampaignCharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OniriumBE.Models.AttackSpells.Spell", "Spell")
                        .WithMany()
                        .HasForeignKey("SpellId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CampaignCharacter");

                    b.Navigation("Spell");
                });

            modelBuilder.Entity("OniriumBE.Models.Campaign.CampaignChar.CampaignCharTrait", b =>
                {
                    b.HasOne("OniriumBE.Models.Campaign.CampaignChar.CampaignCharacter", null)
                        .WithMany("Traits")
                        .HasForeignKey("CampaignCharacterId");
                });

            modelBuilder.Entity("OniriumBE.Models.Campaign.CampaignChar.CampaignCharacterSkills", b =>
                {
                    b.HasOne("OniriumBE.Models.Campaign.CampaignChar.CampaignCharacter", "CampaignCharacter")
                        .WithMany("Skills")
                        .HasForeignKey("CampaignCharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CampaignCharacter");
                });

            modelBuilder.Entity("OniriumBE.Models.Campaign.CampaignChar.CampaignCharacterStat", b =>
                {
                    b.HasOne("OniriumBE.Models.Campaign.CampaignChar.CampaignCharacter", "CampaignCharacter")
                        .WithMany("Stats")
                        .HasForeignKey("CampaignCharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CampaignCharacter");
                });

            modelBuilder.Entity("OniriumBE.Models.Campaign.CampaignChar.CharacterClass", b =>
                {
                    b.HasOne("OniriumBE.Models.Campaign.CampaignChar.CampaignCharacter", "CampaignCharacter")
                        .WithMany("Classes")
                        .HasForeignKey("CampaignCharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CampaignCharacter");
                });

            modelBuilder.Entity("OniriumBE.Models.Campaign.CampaignNote", b =>
                {
                    b.HasOne("OniriumBE.Models.Campaign.Campaign", "Campaign")
                        .WithMany("Notes")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");
                });

            modelBuilder.Entity("OniriumBE.Models.Campaign.CharacterPlayerAssignment", b =>
                {
                    b.HasOne("OniriumBE.Models.Campaign.CampaignChar.CampaignCharacter", "Character")
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OniriumBE.Models.Campaign.Players", "PlayerCampaign")
                        .WithMany("CharacterAssignments")
                        .HasForeignKey("PlayerCampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("PlayerCampaign");
                });

            modelBuilder.Entity("OniriumBE.Models.Campaign.Location", b =>
                {
                    b.HasOne("OniriumBE.Models.Campaign.Campaign", "Campaign")
                        .WithMany("Locations")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");
                });

            modelBuilder.Entity("OniriumBE.Models.Campaign.Npc", b =>
                {
                    b.HasOne("OniriumBE.Models.Campaign.Campaign", "Campaign")
                        .WithMany("Npcs")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OniriumBE.Models.Char.Character", "Char")
                        .WithMany()
                        .HasForeignKey("CharId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");

                    b.Navigation("Char");
                });

            modelBuilder.Entity("OniriumBE.Models.Campaign.Players", b =>
                {
                    b.HasOne("OniriumBE.Models.Campaign.Campaign", "Campaign")
                        .WithMany("Players")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CustomersManager.Models.Auth.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Campaign");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OniriumBE.Models.Campaign.Quest", b =>
                {
                    b.HasOne("OniriumBE.Models.Campaign.Campaign", "Campaign")
                        .WithMany("Quests")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");
                });

            modelBuilder.Entity("OniriumBE.Models.Campaign.Session", b =>
                {
                    b.HasOne("OniriumBE.Models.Campaign.Campaign", "Campaign")
                        .WithMany("Sessions")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.Backgrounds.Background", b =>
                {
                    b.HasOne("CustomersManager.Models.Auth.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.Backgrounds.BackgroundPrivilege", b =>
                {
                    b.HasOne("CustomersManager.Models.Auth.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.Backgrounds.BackgroundPrivilegeAssignment", b =>
                {
                    b.HasOne("OniriumBE.Models.Char.Backgrounds.Background", "Background")
                        .WithMany("BackgroundPrivileges")
                        .HasForeignKey("BackgroundId");

                    b.HasOne("OniriumBE.Models.Char.Backgrounds.BackgroundPrivilege", "Trait")
                        .WithMany("BackgroundPrivilegeAssignments")
                        .HasForeignKey("TraitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Background");

                    b.Navigation("Trait");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.Backgrounds.BackgroundSkill", b =>
                {
                    b.HasOne("OniriumBE.Models.Char.Backgrounds.Background", "Background")
                        .WithMany("BackgroundSkills")
                        .HasForeignKey("BackgroundId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OniriumBE.Models.Char.Skill", "Skill")
                        .WithMany("BackgroundSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Background");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.Character", b =>
                {
                    b.HasOne("OniriumBE.Models.Char.Backgrounds.Background", "Background")
                        .WithMany("Characters")
                        .HasForeignKey("BackgroundId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OniriumBE.Models.Char.Races.Race", "Race")
                        .WithMany()
                        .HasForeignKey("RaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OniriumBE.Models.Char.Races.Subrace", "Subrace")
                        .WithMany()
                        .HasForeignKey("SubraceId");

                    b.HasOne("CustomersManager.Models.Auth.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Background");

                    b.Navigation("Race");

                    b.Navigation("Subrace");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.CharacterInventory", b =>
                {
                    b.HasOne("OniriumBE.Models.Char.Character", "Character")
                        .WithMany("CharacterInventories")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.CharacterSkill", b =>
                {
                    b.HasOne("OniriumBE.Models.Char.Character", "Character")
                        .WithMany("Skills")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OniriumBE.Models.Char.Skill", "Skill")
                        .WithMany()
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.CharacterSpell", b =>
                {
                    b.HasOne("OniriumBE.Models.Char.Character", "Character")
                        .WithMany("CharacterSpells")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OniriumBE.Models.AttackSpells.Spell", "Spell")
                        .WithMany()
                        .HasForeignKey("SpellId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Spell");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.CharacterStats", b =>
                {
                    b.HasOne("OniriumBE.Models.Char.Character", "Character")
                        .WithMany("Stats")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OniriumBE.Models.Char.Stats", "Stat")
                        .WithMany()
                        .HasForeignKey("StatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Stat");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.CharacterTrait", b =>
                {
                    b.HasOne("OniriumBE.Models.Char.Character", "Character")
                        .WithMany("Traits")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.Classes.Class", b =>
                {
                    b.HasOne("CustomersManager.Models.Auth.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.Classes.ClassAssignment", b =>
                {
                    b.HasOne("OniriumBE.Models.Char.Character", "Character")
                        .WithMany("ClassAssignments")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OniriumBE.Models.Char.Classes.Class", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OniriumBE.Models.Char.Classes.Subclass", "Subclass")
                        .WithMany()
                        .HasForeignKey("SubclassId");

                    b.Navigation("Character");

                    b.Navigation("Class");

                    b.Navigation("Subclass");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.Classes.ClassFeatures", b =>
                {
                    b.HasOne("CustomersManager.Models.Auth.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.Classes.ClassFeaturesAssignmente", b =>
                {
                    b.HasOne("OniriumBE.Models.Char.Classes.Class", "Class")
                        .WithMany("TraitAssignments")
                        .HasForeignKey("ClassId");

                    b.HasOne("OniriumBE.Models.Char.Classes.Subclass", "Subclass")
                        .WithMany("TraitAssignments")
                        .HasForeignKey("SubclassId");

                    b.HasOne("OniriumBE.Models.Char.Classes.ClassFeatures", "Trait")
                        .WithMany()
                        .HasForeignKey("TraitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Subclass");

                    b.Navigation("Trait");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.Classes.ClassProficiency", b =>
                {
                    b.HasOne("OniriumBE.Models.Char.Classes.Class", "Class")
                        .WithMany("ClassProficiencies")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OniriumBE.Models.Char.Classes.Proficiency", "Proficiency")
                        .WithMany("ClassProficiencies")
                        .HasForeignKey("ProficiencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Proficiency");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.Classes.ClassSpell", b =>
                {
                    b.HasOne("OniriumBE.Models.Char.Classes.Class", "Class")
                        .WithMany("ClassSpell")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OniriumBE.Models.AttackSpells.Spell", "Spell")
                        .WithMany("ClassSpell")
                        .HasForeignKey("SpellId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Spell");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.Classes.Subclass", b =>
                {
                    b.HasOne("OniriumBE.Models.Char.Classes.Class", "Class")
                        .WithMany("Subclasses")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CustomersManager.Models.Auth.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Class");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.Races.Race", b =>
                {
                    b.HasOne("CustomersManager.Models.Auth.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.Races.RaceTraitAssignment", b =>
                {
                    b.HasOne("OniriumBE.Models.Char.Races.Race", "Race")
                        .WithMany("TraitAssignments")
                        .HasForeignKey("RaceId");

                    b.HasOne("OniriumBE.Models.Char.Races.Subrace", "Subrace")
                        .WithMany("TraitAssignments")
                        .HasForeignKey("SubraceId");

                    b.HasOne("OniriumBE.Models.Char.Races.RacialTraits", "Trait")
                        .WithMany()
                        .HasForeignKey("TraitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Race");

                    b.Navigation("Subrace");

                    b.Navigation("Trait");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.Races.RacialTraits", b =>
                {
                    b.HasOne("CustomersManager.Models.Auth.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.Races.StartingBoost", b =>
                {
                    b.HasOne("OniriumBE.Models.Char.Character", "Character")
                        .WithMany("StartingBoost")
                        .HasForeignKey("CharId");

                    b.HasOne("OniriumBE.Models.Char.Stats", "Stats")
                        .WithMany()
                        .HasForeignKey("StatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Stats");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.Races.Subrace", b =>
                {
                    b.HasOne("OniriumBE.Models.Char.Races.Race", "Race")
                        .WithMany("Subraces")
                        .HasForeignKey("RaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CustomersManager.Models.Auth.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Race");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.Skill", b =>
                {
                    b.HasOne("OniriumBE.Models.Char.Stats", "Stat")
                        .WithMany()
                        .HasForeignKey("StatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CustomersManager.Models.Auth.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Stat");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.Stats", b =>
                {
                    b.HasOne("CustomersManager.Models.Auth.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OniriumBE.Models.Items.InventoryItemAssignment", b =>
                {
                    b.HasOne("OniriumBE.Models.Char.CharacterInventory", "Inventory")
                        .WithMany("InventoryItemAssignments")
                        .HasForeignKey("InventoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OniriumBE.Models.Items.Items", "InventoryItem")
                        .WithMany()
                        .HasForeignKey("InventoryItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inventory");

                    b.Navigation("InventoryItem");
                });

            modelBuilder.Entity("OniriumBE.Models.Items.ItemDamage", b =>
                {
                    b.HasOne("OniriumBE.Models.AttackSpells.Damage", "Damage")
                        .WithMany("ItemSpellDamages")
                        .HasForeignKey("DamageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OniriumBE.Models.Items.Weapon", "Weapon")
                        .WithMany("Damages")
                        .HasForeignKey("WeaponId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Damage");

                    b.Navigation("Weapon");
                });

            modelBuilder.Entity("OniriumBE.Models.Items.ItemEffect", b =>
                {
                    b.HasOne("OniriumBE.Models.Char.Stats", "AffectedStatObject")
                        .WithMany()
                        .HasForeignKey("AffectedStat");

                    b.HasOne("OniriumBE.Models.Items.MagicalItem", "MagicalItem")
                        .WithMany("Effects")
                        .HasForeignKey("MagicalItemId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("OniriumBE.Models.Items.Potion", "Potion")
                        .WithMany("Effects")
                        .HasForeignKey("PotionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("AffectedStatObject");

                    b.Navigation("MagicalItem");

                    b.Navigation("Potion");
                });

            modelBuilder.Entity("OniriumBE.Models.Items.ItemRequirement", b =>
                {
                    b.HasOne("OniriumBE.Models.Items.Armor", "Armor")
                        .WithMany("Requirements")
                        .HasForeignKey("ArmorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OniriumBE.Models.Char.Stats", "Stats")
                        .WithMany()
                        .HasForeignKey("StatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Armor");

                    b.Navigation("Stats");
                });

            modelBuilder.Entity("OniriumBE.Models.Items.Items", b =>
                {
                    b.HasOne("OniriumBE.Models.Items.ItemCategory", "ItemCategory")
                        .WithMany()
                        .HasForeignKey("ItemCategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OniriumBE.Models.Items.ItemCategory", null)
                        .WithMany("Items")
                        .HasForeignKey("ItemCategoryId1");

                    b.HasOne("CustomersManager.Models.Auth.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ItemCategory");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OniriumBE.Models.MODs.Mod", b =>
                {
                    b.HasOne("CustomersManager.Models.Auth.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("OniriumBE.Models.MODs.ModContent", b =>
                {
                    b.HasOne("OniriumBE.Models.MODs.Mod", "Mod")
                        .WithMany("Contents")
                        .HasForeignKey("ModId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Mod");
                });

            modelBuilder.Entity("OniriumBE.Models.MODs.ModRating", b =>
                {
                    b.HasOne("OniriumBE.Models.MODs.Mod", "Mod")
                        .WithMany("Ratings")
                        .HasForeignKey("ModId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CustomersManager.Models.Auth.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mod");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OniriumBE.Models.MODs.ModReport", b =>
                {
                    b.HasOne("OniriumBE.Models.MODs.Mod", "Mod")
                        .WithMany("Reports")
                        .HasForeignKey("ModId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CustomersManager.Models.Auth.ApplicationUser", "ResolvedByUser")
                        .WithMany()
                        .HasForeignKey("ResolvedBy");

                    b.HasOne("CustomersManager.Models.Auth.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mod");

                    b.Navigation("ResolvedByUser");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OniriumBE.Models.Shop.Order", b =>
                {
                    b.HasOne("CustomersManager.Models.Auth.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("OniriumBE.Models.Shop.OrderDetail", b =>
                {
                    b.HasOne("OniriumBE.Models.Shop.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OniriumBE.Models.Shop.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("OniriumBE.Models.Shop.Product", b =>
                {
                    b.HasOne("OniriumBE.Models.Shop.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("OniriumBE.Models.Shop.Review", b =>
                {
                    b.HasOne("OniriumBE.Models.Shop.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CustomersManager.Models.Auth.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OniriumBE.Models.Shop.Stock", b =>
                {
                    b.HasOne("OniriumBE.Models.Shop.Size", "Size")
                        .WithMany()
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OniriumBE.Models.Shop.Variant", "Variante")
                        .WithMany("Stocks")
                        .HasForeignKey("VariantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Size");

                    b.Navigation("Variante");
                });

            modelBuilder.Entity("OniriumBE.Models.Shop.Variant", b =>
                {
                    b.HasOne("OniriumBE.Models.Shop.Color", "Color")
                        .WithMany("Variants")
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OniriumBE.Models.Shop.Product", "Product")
                        .WithMany("Variants")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Color");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CustomersManager.Models.Auth.ApplicationRole", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("CustomersManager.Models.Auth.ApplicationUser", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("OniriumBE.Models.AttackSpells.Damage", b =>
                {
                    b.Navigation("ItemSpellDamages");

                    b.Navigation("SpellSpellDamages");
                });

            modelBuilder.Entity("OniriumBE.Models.AttackSpells.Spell", b =>
                {
                    b.Navigation("ClassSpell");

                    b.Navigation("SpellSpellDamages");
                });

            modelBuilder.Entity("OniriumBE.Models.Campaign.Campaign", b =>
                {
                    b.Navigation("Locations");

                    b.Navigation("Notes");

                    b.Navigation("Npcs");

                    b.Navigation("Players");

                    b.Navigation("Quests");

                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("OniriumBE.Models.Campaign.CampaignChar.CampaignCharacter", b =>
                {
                    b.Navigation("Classes");

                    b.Navigation("Inventory");

                    b.Navigation("Skills");

                    b.Navigation("Spells");

                    b.Navigation("Stats");

                    b.Navigation("Traits");
                });

            modelBuilder.Entity("OniriumBE.Models.Campaign.Players", b =>
                {
                    b.Navigation("CharacterAssignments");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.Backgrounds.Background", b =>
                {
                    b.Navigation("BackgroundPrivileges");

                    b.Navigation("BackgroundSkills");

                    b.Navigation("Characters");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.Backgrounds.BackgroundPrivilege", b =>
                {
                    b.Navigation("BackgroundPrivilegeAssignments");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.Character", b =>
                {
                    b.Navigation("CharacterInventories");

                    b.Navigation("CharacterSpells");

                    b.Navigation("ClassAssignments");

                    b.Navigation("Skills");

                    b.Navigation("StartingBoost");

                    b.Navigation("Stats");

                    b.Navigation("Traits");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.CharacterInventory", b =>
                {
                    b.Navigation("InventoryItemAssignments");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.Classes.Class", b =>
                {
                    b.Navigation("ClassProficiencies");

                    b.Navigation("ClassSpell");

                    b.Navigation("Subclasses");

                    b.Navigation("TraitAssignments");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.Classes.Proficiency", b =>
                {
                    b.Navigation("ClassProficiencies");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.Classes.Subclass", b =>
                {
                    b.Navigation("TraitAssignments");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.Races.Race", b =>
                {
                    b.Navigation("Subraces");

                    b.Navigation("TraitAssignments");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.Races.Subrace", b =>
                {
                    b.Navigation("TraitAssignments");
                });

            modelBuilder.Entity("OniriumBE.Models.Char.Skill", b =>
                {
                    b.Navigation("BackgroundSkills");
                });

            modelBuilder.Entity("OniriumBE.Models.Items.ItemCategory", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("OniriumBE.Models.MODs.Mod", b =>
                {
                    b.Navigation("Contents");

                    b.Navigation("Ratings");

                    b.Navigation("Reports");
                });

            modelBuilder.Entity("OniriumBE.Models.Shop.Color", b =>
                {
                    b.Navigation("Variants");
                });

            modelBuilder.Entity("OniriumBE.Models.Shop.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("OniriumBE.Models.Shop.Product", b =>
                {
                    b.Navigation("Variants");
                });

            modelBuilder.Entity("OniriumBE.Models.Shop.Variant", b =>
                {
                    b.Navigation("Stocks");
                });

            modelBuilder.Entity("OniriumBE.Models.Items.Armor", b =>
                {
                    b.Navigation("Requirements");
                });

            modelBuilder.Entity("OniriumBE.Models.Items.MagicalItem", b =>
                {
                    b.Navigation("Effects");
                });

            modelBuilder.Entity("OniriumBE.Models.Items.Potion", b =>
                {
                    b.Navigation("Effects");
                });

            modelBuilder.Entity("OniriumBE.Models.Items.Weapon", b =>
                {
                    b.Navigation("Damages");
                });
#pragma warning restore 612, 618
        }
    }
}
